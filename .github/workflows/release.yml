name: Build & Deploy
on:
  release:
    types: [created]
    branches: main
jobs:
  build:
    env:
      RELEASE_FILE: parteiduell-frontend-${{github.event.release.tag_name}}
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js "14.x"
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - name: Install dependencies
        run: yarn install --prefer-offline
      - name: Inject the new version into the package.json
        run: npm version --no-git-tag-version ${VERSION}
      - name: Building source
        run: yarn build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{env.RELEASE_FILE}}
          path: build
        env:
          CI: true
      - name: Package Release
        run: tar -zcf ${RELEASE_FILE}.tar.gz build README.md LICENSE
      - name: Upload Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          asset_path: ${{env.RELEASE_FILE}}.tar.gz
          upload_url: ${{github.event.release.upload_url}}
          asset_name: ${{env.RELEASE_FILE}}.tar.gz
          asset_content_type: application/octet-stream
  deploy:
    env:
      RELEASE_FILE: parteiduell-frontend-${{github.event.release.tag_name}}
    name: Deploy to production
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: ${{env.RELEASE_FILE}}
      - name: Deploy files
        env:
          SSH_HOST_KEY: ${{secrets.SSH_HOST_KEY}}
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
          echo "$SSH_HOST_KEY" > ~/.ssh/known_hosts
          rsync -az --progress -e ssh ./${{env.RELEASE_FILE}}/ root@parteiduell.de:/var/www/parteiduell.de/production --delete
